apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.imageName }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: APP_PORT
              value: "{{ .Values.port }}"
            - name: REDIS_SERVER
              value: {{ .Values.redis.server }}
            - name: REDIS_PORT
              value: "{{ .Values.redis.port }}"
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.password }}
            - name: MONGO_SERVER
              value: {{ .Values.mongo.server }}
            - name: MONGO_USERNAME
              value: {{ .Values.mongo.username }}
            - name: MONGO_PASSWORD
              value: {{ .Values.mongo.password }}
            - name: MONGO_PORT
              value: "{{ .Values.mongo.port }}"
            - name: MONGO_DATABASE
              value: {{ .Values.mongo.database }}
            - name: MONGO_TABLE
              value: {{ .Values.mongo.table }}
            - name: OTEL_SERVICE_NAME
              value: "{{ .Values.name }}-{{ .Values.language }}"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.instance.id=$(K8S_POD_NAME)
            - name: OTEL_EXPORTER_TYPE
              value: {{ .Values.otel.exporter }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.otlp.endpoint }}
            - name: OTEL_LOGS_EXPORTER
              value: otlp
            - name: OTEL_EXPORTER_OTLP_HEADERS
              value: {{ .Values.otlp.headers }}
          ports:
            - protocol: TCP
              containerPort: {{ .Values.port }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          # livenessProbe:
          #   initialDelaySeconds: 2
          #   periodSeconds: 10
          #   httpGet:
          #     path: /livez
          #     port: 8080
          # readinessProbe:
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   httpGet:
          #     path: /readyz
          #     port: 8080
